import React from "react";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { PrismaClient } from "@prisma/client";
import mapPlayers from "../utils/apiMappings/players";
const prisma = new PrismaClient();

import {
  flexRender,
  getCoreRowModel,
  useReactTable,
} from "@tanstack/react-table";

const columns = [
  {
    id: "Name",
    accessorFn: (row) => `${row.firstName} ${row.lastName}`,
  },
  { id: "Position", accessorKey: "position" },
  { id: "Goals", accessorKey: "goals" },
  { id: "Assists", accessorKey: "assists" },
  { id: "Clean sheets", accessorKey: "cleanSheets" },
  { id: "Minutes", accessorKey: "minutes" },
  { id: "Goals conceded", accessorKey: "goalsConceded" },
  { id: "bonus", accessorKey: "bonus" },
];

export default function Home({ players }) {
  const [data, setData] = React.useState(() => [...players]);

  console.log({ players });

  const table = useReactTable({
    data,
    columns,
    getCoreRowModel: getCoreRowModel(),
  });

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className="text-3xl font-bold">Arsenal</h1>
        <table>
          <thead>
            {table.getHeaderGroups().map((headerGroup) => (
              <tr key={headerGroup.id}>
                {headerGroup.headers.map((header) => (
                  <th key={header.id}>
                    {flexRender(
                      header.column.columnDef.header,
                      header.getContext()
                    )}
                  </th>
                ))}
              </tr>
            ))}
          </thead>
          <tbody>
            {table.getRowModel().rows.map((row) => (
              <tr key={row.id}>
                {row.getVisibleCells().map((cell) => (
                  <td key={cell.id}>
                    {flexRender(cell.column.columnDef.cell, cell.getContext())}
                  </td>
                ))}
              </tr>
            ))}
          </tbody>
        </table>
      </main>

      <footer className={styles.footer}>
        <div>FPL data</div>
      </footer>
    </div>
  );
}

export async function getStaticProps(context) {
  const playersDb = await prisma.players.findMany({
    where: {
      team: 1,
    },
  });

  const players = mapPlayers(JSON.parse(JSON.stringify(playersDb)));

  return {
    props: {
      players,
    },
  };
}
